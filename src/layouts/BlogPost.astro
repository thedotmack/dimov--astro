---
import { getEntries, getEntry, type CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import BaseLayout from './BaseLayout.astro';
import Comments from '../components/Comments.astro';

type Props = CollectionEntry<'posts'>['data'];

const { id, title, excerpt, date, modified, featured_media } = Astro.props;

const tags = await getEntries(Astro.props.tags);
const categories = await getEntries(Astro.props.categories);
const author = await getEntry(Astro.props.author);
const heroImage = featured_media && (await getEntry(featured_media));
---

<BaseLayout title={title.rendered} description={excerpt.rendered}>
	<main>
		<article>
			<div class="hero-image">
				{
					heroImage && heroImage.data.media_type === 'image' && (
						<img width={1020} height={510} src={heroImage.data.source_url} alt="" />
					)
				}
			</div>
			<div class="prose">
				<div class="title">
					<div class="date">
						<FormattedDate date={date} />
						{
							modified && (
								<div class="last-updated-on">
									Last updated on <FormattedDate date={modified} />
								</div>
							)
						}
					</div>
					<h1 set:html={title.rendered} />
					<p>
						By {author?.data?.name || 'Unknown Author'}
						{
							categories.length > 0 && (
								<>
									in{' '}
									{categories.map((category, i, { length }) => (
										<>
											<a href={`/category/${category.data.slug}`}>{category.data.name}</a>
											{i < length - 1 && ','}
										</>
									))}
								</>
							)
						}
					</p>
					<hr />
				</div>

				<slot />

				{
					tags.length > 0 && (
						<>
							<hr />
							<p>
								<strong>Tags:</strong>{' '}
								{tags.map((tag, i, { length }) => (
									<>
										<a href={`/tag/${tag.data.slug}`}>{tag.data.name}</a>
										{i < length - 1 && '/'}
									</>
								))}
							</p>
						</>
					)
				}
				<Comments {id} />
			</div>
		</article>
	</main>
</BaseLayout>

<style>
	main {
		width: calc(100% - 2em);
		max-width: 100%;
		margin: 0;
	}
	.hero-image {
		width: 100%;
	}
	.hero-image img {
		display: block;
		object-fit: cover;
		aspect-ratio: 2;
		margin: 0 auto;
		border-radius: 12px;
		box-shadow: var(--box-shadow);
	}
	.prose {
		width: 720px;
		max-width: calc(100% - 2em);
		margin: auto;
		padding: 1em;
		color: rgb(var(--gray-dark));
	}
	.title {
		margin-bottom: 1em;
		padding: 1em 0;
		text-align: center;
		line-height: 1;
	}
	.title h1 {
		margin: 0 0 0.5em 0;
	}
	.date {
		margin-bottom: 0.5em;
		color: rgb(var(--gray));
	}
	.last-updated-on {
		font-style: italic;
	}
</style>
